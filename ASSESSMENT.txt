1. Create Three Table Name :  city, customer and country 

->Create :
1. Create Table Name : City
CREATE TABLE city (id int(10),city_name varchar(200),lati int(30),longi int(30),country_id int(10));

->Insert Table Student :City
INSERT INTO city (id,city_name,lati,longi,country_id) VALUES (1,'Berlin',52.520008,13.404954,1);
INSERT INTO city (id,city_name,lati,longi,country_id)VALUES(2,'Belgrade',44.787197,20.457273,2),
INSERT INTO city (id,city_name,lati,longi,country_id)VALUES(3,'Zagreb',45.815399,15.966568,3),
INSERT INTO city (id,city_name,lati,longi,country_id)VALUES(4,'New York',40.730610,-73.935242,4),
INSERT INTO city (id,city_name,lati,longi,country_id)VALUES(5,'Los Angeles',34.052235,-118.243683,4),
INSERT INTO city (id,city_name,lati,longi,country_id)VALUES(6,'Warsaw',52.237049,21.017532,5);


->Create :
2. Create Table Name : Customer

->Create :CREATE TABLE Customer (id int(10),customer_name varchar(200),city_id int(20),customer_address varchar(200),next_call_date date,ts_inserted date);

->Insert Table Student :Customer  Data
INSERT INTO customer (id,customer_name,city_id,customer_address,next_call_date,ts_inserted) VALUES
(1,'Jewelry Store',4,'Long Street 120','2020-01-21','2020-01-09 14:01:20.000');

INSERT INTO customer (id,customer_name,city_id,customer_address,next_call_date,ts_inserted) VALUES
(2,'Bakery',1,'Kurfurstendamm 25','2020-02-21','2020-01-09 17:52:15.000');

INSERT INTO customer (id,customer_name,city_id,customer_address,next_call_date,ts_inserted) VALUES
(3,'Cafe',1,'Tauentzienstrabe 44','2020-01-21','2020-01-10 08:02:49.000');

INSERT INTO customer (id,customer_name,city_id,customer_address,next_call_date,ts_inserted) VALUES
(4,'Restaurant',3,'Ulica lipa 15','2020-01-21','2020-01-10 09:20:21.000');

->Create :
3. Create Table Name : Country tabel


CREATE TABLE Country(id int(10),country_name varchar(100),countery_name_eng varchar(100),country_code varchar(100));

->Insert Table Student :Country Data

INSERT INTO country(id,country_name,countery_name_eng,country_code)VALUES
(1,'Deutschland','Germany','DEU');

INSERT INTO country(id,country_name,countery_name_eng,country_code)VALUES
(2,'Srbija','Serbia','SRB');

INSERT INTO country(id,country_name,countery_name_eng,country_code)VALUES
(3,'Hrvatska','Croatia','HRV');

INSERT INTO country(id,country_name,countery_name_eng,country_code)VALUES
(4,'United','State of America','USA');

INSERT INTO country(id,country_name,countery_name_eng,country_code)VALUES
(5,'Polska','Poland','POL');

INSERT INTO country(id,country_name,countery_name_eng,country_code)VALUES
(6,'Espana','Spain','ESP');

INSERT INTO country(id,country_name,countery_name_eng,country_code)VALUES
(7,'Rossiya','Russia','RUS');

Task 1:- join multiple tables using left join

->List all Countries and customers related to these countries.

Answer:-select country.country_name,customer.customer_name from country LEFT JOIN customer on country.id=customer.id;

->For each country displaying its name in English, the name of the city customer is located in as 
well as the name of the customer. 

Answer:-select country.country_name,customer.customer_name,customer.customer_address from country LEFT JOIN customer on country.id=customer.id;

->Return even countries without related cities and customers.

Answer:-select city.city_name,customer.customer_name from city LEFT JOIN customer on city.id=customer.id;

Task 2:-join multiple tables using both left and inner join

->Return the list of all countries that have pairs(exclude countries which are not referenced by any 
city). For such pairs return all customers.

Answer:-select country.country_name,country.countery_name_eng,country.country_code from customer.customer_name,customer.city_id,customer.customer_address,customer.next_call_date,customer.ts_inserted LEFT JOIN country on country.id=customer.id;

->Return even pairs of not having a single customer

Answer:-select country.country_name,country.country_code from city.city_name,city.country_id LEFT JOIN country on country.id=city.id;

